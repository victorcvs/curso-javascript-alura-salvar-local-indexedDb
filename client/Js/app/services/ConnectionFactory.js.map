{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","stores","version","dbName","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createSores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectSore","createObjectStore","autoIncrement"],"mappings":";;;;;;AAAA,IAAIA,oBAAqB,YAAY;AAAG;AACpC,QAAMC,SAAS,CAAC,aAAD,CAAf;AACA,QAAMC,UAAU,CAAhB;AACA,QAAMC,SAAS,YAAf;AACA,QAAIC,aAAa,IAAjB;AACA,QAAIC,QAAQ,IAAZ;;AAEA;AAAmC;AAC/B,qCAAc;AAAA;;AACV,kBAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACH;;AAHL;AAAA;AAAA,4CAK2B;AACnB,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,wBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBV,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAQ,gCAAYI,eAAZ,GAA8B,aAAK;AAC/Bd,0CAAkBe,YAAlB,CAA+BC,EAAEC,MAAF,CAASC,MAAxC;AAEH,qBAHD;;AAKAR,gCAAYS,SAAZ,GAAwB,aAAK;AACzB,4BAAG,CAACf,UAAJ,EAAgB;AACZA,yCAAaY,EAAEC,MAAF,CAASC,MAAtB;AACAb,oCAAQD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAR;AACAA,uCAAWC,KAAX,GAAmB,YAAY;AAC3B,sCAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACH,6BAFD;AAGH;;AAEDE,gCAAQJ,UAAR;AAEH,qBAXD;;AAaAM,gCAAYW,OAAZ,GAAsB,aAAK;AACvBC,gCAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASC,MAAT,CAAgBM,KAA5B;AACAf,+BAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AAEH,qBAJD;AAMH,iBA3BM,CAAP;AA4BH;AAlCL;AAAA;AAAA,yCAoCwBrB,UApCxB,EAoCoC;AAC5BH,uBAAOyB,OAAP,CAAe,iBAAS;AACpB,wBAAItB,WAAWuB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAJ,EAAiD;AAC7CzB,mCAAW0B,gBAAX,CAA4BD,KAA5B;AACH;;AAEDzB,+BAAW2B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAc,IAAf,EAApC;AACH,iBAND;AAQH;AA7CL;AAAA;AAAA,8CA+C6B;AACrB,oBAAI5B,UAAJ,EAAgB;AACZC;AACA;AACAD,iCAAa,IAAb;AACH;AACJ;AArDL;;AAAA;AAAA;AAwDF,CA/DsB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["var ConnectionFactory = (function () {  //Module pattern - Transforma a classe em função anônima que retorna a classe instanciada\r\n    const stores = ['negociacoes'];\r\n    const version = 3;\r\n    const dbName = 'aluraframe';\r\n    var connection = null;\r\n    var close = null;\r\n    \r\n    return class ConnectionFactory {   // return aqui serve pra devolver a classe instanciada\r\n        constructor() {\r\n            throw new Error('Não é permitido instanciar ConnectionFactory');\r\n        }\r\n    \r\n        static getConnection() {\r\n            return new Promise((resolve, reject) => {\r\n                let openRequest = window.indexedDB.open(dbName, version);\r\n    \r\n                openRequest.onupgradeneeded = e => {\r\n                    ConnectionFactory._createSores(e.target.result);\r\n                    \r\n                };\r\n                \r\n                openRequest.onsuccess = e => {\r\n                    if(!connection) {\r\n                        connection = e.target.result;\r\n                        close = connection.close.bind(connection);\r\n                        connection.close = function () {   \r\n                            throw new Error(\"Não é permitido fechar a conexão\");\r\n                        }\r\n                    }\r\n    \r\n                    resolve(connection);\r\n                    \r\n                };\r\n                \r\n                openRequest.onerror = e => {\r\n                    console.log(e.target.result.error);\r\n                    reject(e.target.error.name);\r\n                    \r\n                };\r\n                \r\n            });\r\n        }\r\n        \r\n        static _createSores(connection) {\r\n            stores.forEach(store => {\r\n                if (connection.objectStoreNames.contains(store)) {\r\n                    connection.deleteObjectSore(store);\r\n                }\r\n        \r\n                connection.createObjectStore(store, {autoIncrement:true});\r\n            })\r\n    \r\n        }\r\n\r\n        static closeConnection() {\r\n            if (connection) {\r\n                close();\r\n                // Reflect.apply(close, connection, []); --> outra forma de acionar sem precisar do bind\r\n                connection = null;\r\n            }\r\n        }\r\n    }\r\n\r\n })();\r\n\r\n\r\n"]}