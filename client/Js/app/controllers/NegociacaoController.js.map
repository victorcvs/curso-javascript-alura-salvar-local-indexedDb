{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputQuantidade","_inputValor","_inputData","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacoesService","_ordemAtual","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","esvazia","importa","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n    constructor() {\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        this._inputData = $('#data');\r\n        \r\n        // Cria um proxy (bind) entre o model e a view através de uma classe auxiliadora \r\n        this._listaNegociacoes = new Bind( new ListaNegociacoes(),                        // model\r\n                                           new NegociacoesView($('#negociacaoView')),     // view\r\n                                           'adiciona','esvazia', 'ordena','inverteOrdem'); // props\r\n\r\n        this._mensagem = new Bind(new Mensagem(),\r\n                                  new MensagemView( $('#mensagemView')), \r\n                                 'texto');\r\n        \r\n        this._service = new NegociacoesService();\r\n        this._ordemAtual = '';\r\n        \r\n        this._init();\r\n        \r\n    }\r\n    \r\n    _init() {\r\n        //Recupera a lista das negociações salvas no IndexedDb\r\n        // *** forma completa\r\n        // ConnectionFactory\r\n        //     .getConnection()\r\n        //     .then(connection => {\r\n        //         new NegociacaoDao(connection)\r\n        //         .listaTodos()\r\n        //         .then(negociacoes => {\r\n        //                 negociacoes.forEach(negociacao => {\r\n        //                     this._listaNegociacoes.adiciona(negociacao)\r\n        //                 });\r\n        //             });\r\n        //     });\r\n    \r\n        // *** forma reduzida\r\n        // ConnectionFactory\r\n        //     .getConnection()\r\n        //     .then(connection => new NegociacaoDao(connection))   // Retorna NegociacaoDAO (arrow function sempre tem retorno)\r\n        //     .then(dao => dao.listaTodos())  // retorna array de negociacoes\r\n        //     .then(negociacoes => \r\n        //         negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))) \r\n        //     .catch( erro => {\r\n        //         console.log(erro);\r\n        //         this._mensagem.texto = erro;\r\n        //     });   \r\n\r\n        // *** usando o service\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes => \r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))) \r\n            .catch(erro => this._mensagem.texto = erro);      \r\n            \r\n        this.importaNegociacoes()    \r\n        // Importa automaticamente as negociações a cada x tempo\r\n        // setInterval(() => {this.importaNegociacoes()} , 3000); // executa a cada x segundos\r\n        \r\n    }\r\n    adiciona(event) {\r\n\r\n        event.preventDefault();\r\n        let negociacao = this._criaNegociacao();\r\n        \r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                    this._listaNegociacoes.adiciona(negociacao);\r\n                    this._mensagem.texto = mensagem; \r\n                    this._limpaFormulario()})\r\n            .catch(erro => this._mensagem.texto = erro);        \r\n    }\r\n    \r\n    apaga() {\r\n        this._service\r\n        .apaga()\r\n        .then(mensagem => {\r\n            this._listaNegociacoes.esvazia();\r\n            this._mensagem.texto = mensagem;\r\n            })\r\n        .catch(erro => this._mensagem.texto = erro);  \r\n    }\r\n\r\n    importaNegociacoes() {\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações importadas com sucesso'   \r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);                              \r\n    }\r\n\r\n    _criaNegociacao () {\r\n        return new Negociacao (\r\n            DateHelper.textoParaData(this._inputData.value),   \r\n           parseInt(this._inputQuantidade.value), \r\n           parseFloat(this._inputValor.value));\r\n    }\r\n\r\n    _limpaFormulario () {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n\r\n        this._inputData.focus();\r\n    }\r\n\r\n    ordena(coluna) {\r\n        \r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem(); \r\n        } else {\r\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);    \r\n        }\r\n        this._ordemAtual = coluna;    \r\n    }\r\n}"]}