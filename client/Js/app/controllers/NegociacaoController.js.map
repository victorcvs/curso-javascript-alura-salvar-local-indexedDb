{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacoesService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputQuantidade","_inputValor","_inputData","_listaNegociacoes","_mensagem","_service","_ordemAtual","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","esvazia","importa","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes.js';\r\nimport {Mensagem} from '../models/Mensagem.js';\r\nimport {NegociacoesView} from '../views/NegociacoesView.js';\r\nimport {MensagemView} from '../views/MensagemView.js';\r\nimport {NegociacoesService} from '../services/NegociacoesService.js';\r\nimport {DateHelper} from '../helpers/DateHelper.js';\r\nimport {Bind} from '../helpers/Bind.js';\r\nimport {Negociacao} from '../models/Negociacao.js';\r\n\r\nclass NegociacaoController {\r\n    constructor() {\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        this._inputData = $('#data');\r\n        \r\n        // Cria um proxy (bind) entre o model e a view através de uma classe auxiliadora \r\n        this._listaNegociacoes = new Bind( new ListaNegociacoes(),                        // model\r\n                                           new NegociacoesView($('#negociacaoView')),     // view\r\n                                           'adiciona','esvazia', 'ordena','inverteOrdem'); // props\r\n\r\n        this._mensagem = new Bind(new Mensagem(),\r\n                                  new MensagemView( $('#mensagemView')), \r\n                                 'texto');\r\n        \r\n        this._service = new NegociacoesService();\r\n        this._ordemAtual = '';\r\n        \r\n        this._init();\r\n        \r\n    }\r\n    \r\n    _init() {\r\n        //Recupera a lista das negociações salvas no IndexedDb\r\n        // *** forma completa\r\n        // ConnectionFactory\r\n        //     .getConnection()\r\n        //     .then(connection => {\r\n        //         new NegociacaoDao(connection)\r\n        //         .listaTodos()\r\n        //         .then(negociacoes => {\r\n        //                 negociacoes.forEach(negociacao => {\r\n        //                     this._listaNegociacoes.adiciona(negociacao)\r\n        //                 });\r\n        //             });\r\n        //     });\r\n    \r\n        // *** forma reduzida\r\n        // ConnectionFactory\r\n        //     .getConnection()\r\n        //     .then(connection => new NegociacaoDao(connection))   // Retorna NegociacaoDAO (arrow function sempre tem retorno)\r\n        //     .then(dao => dao.listaTodos())  // retorna array de negociacoes\r\n        //     .then(negociacoes => \r\n        //         negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))) \r\n        //     .catch( erro => {\r\n        //         console.log(erro);\r\n        //         this._mensagem.texto = erro;\r\n        //     });   \r\n\r\n        // *** usando o service\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes => \r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))) \r\n            .catch(erro => this._mensagem.texto = erro);      \r\n            \r\n        this.importaNegociacoes()    \r\n        // Importa automaticamente as negociações a cada x tempo\r\n        // setInterval(() => {this.importaNegociacoes()} , 3000); // executa a cada x segundos\r\n        \r\n    }\r\n    adiciona(event) {\r\n\r\n        event.preventDefault();\r\n        let negociacao = this._criaNegociacao();\r\n        \r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                    this._listaNegociacoes.adiciona(negociacao);\r\n                    this._mensagem.texto = mensagem; \r\n                    this._limpaFormulario()})\r\n            .catch(erro => this._mensagem.texto = erro);        \r\n    }\r\n    \r\n    apaga() {\r\n        this._service\r\n        .apaga()\r\n        .then(mensagem => {\r\n            this._listaNegociacoes.esvazia();\r\n            this._mensagem.texto = mensagem;\r\n            })\r\n        .catch(erro => this._mensagem.texto = erro);  \r\n    }\r\n\r\n    importaNegociacoes() {\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações importadas com sucesso'   \r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);                              \r\n    }\r\n\r\n    _criaNegociacao () {\r\n        return new Negociacao (\r\n            DateHelper.textoParaData(this._inputData.value),   \r\n           parseInt(this._inputQuantidade.value), \r\n           parseFloat(this._inputValor.value));\r\n    }\r\n\r\n    _limpaFormulario () {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n\r\n        this._inputData.focus();\r\n    }\r\n\r\n    ordena(coluna) {\r\n        \r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem(); \r\n        } else {\r\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);    \r\n        }\r\n        this._ordemAtual = coluna;    \r\n    }\r\n}\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance() {\r\n\r\n    return negociacaoController;\r\n\r\n}"]}