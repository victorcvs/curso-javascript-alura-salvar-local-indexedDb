{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","texto","test","Date","split","map","item","indice","data","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;;AAET;AACA,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;;;kDAEoBC,K,EAAM;AAAK;;AAE5B,4BAAI,CAAC,sBAAsBC,IAAtB,CAA2BD,KAA3B,CAAL,EAAwC;AAAG;AACF;AACrC,kCAAM,IAAID,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAED,kEAAWG,IAAX,mCACOF,MAAgB;AAAhB,yBACFG,KADE,CACI,GADJ,EACgB;AADhB,yBAEFC,GAFE,CAEE,UAACC,IAAD,EAAQC,MAAR;AAAA,mCAAmBD,OAAOC,SAAS,CAAnC;AAAA,yBAFF,CADP,OAPuB,CAU0B;AACpD;;;kDAEqBC,I,EAAM;AACxB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    // não deve definir o constructor se não tem propriedades\r\n    constructor() {\r\n        throw new Error('DateHelper não pode ser instanciado.');\r\n    }\r\n\r\n    static textoParaData(texto){    // método estático\r\n\r\n        if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(texto)) {  // Regex validação de máscara numérica\r\n                                                 // O ˆ indica \"começando com \" e o $ \"terminando com\". \r\n            throw new Error('Data deve estar no formato AAAA-MM-DD');\r\n        }\r\n\r\n        return new Date(\r\n            ...texto           // spread operator -> permite passar array como parâmetro casando os indices\r\n            .split('-')        // separa a data em array usando o '-' como separador\r\n            .map((item , indice) => item - indice % 2)); // formata o array com função que subtrai 1 dos elementos ìmpares (mod 2)\r\n    }\r\n\r\n     static dataParaTexto(data) {\r\n        return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;\r\n    }\r\n}"]}