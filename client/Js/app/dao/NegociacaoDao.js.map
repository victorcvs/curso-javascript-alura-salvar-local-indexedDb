{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAEnC,oBAAIC,UAAU,MAAKN,WAAL,CACAO,WADA,CACY,CAAC,MAAKN,MAAN,CADZ,EAC0B,WAD1B,EAEAO,WAFA,CAEY,MAAKP,MAFjB,EAGAQ,GAHA,CAGIP,UAHJ,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBC,4BAAQC,GAAR,CAAY,iCAAZ;AACAR;AACH,iBAHD;;AAKAE,wBAAQO,OAAR,GAAkB,aAAK;AACnBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,gCAAP;AACH,iBAHD;AAKH,aAjBM,CAAP;AAkBH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAa,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAEpC,oBAAIY,SAAS,OAAKjB,WAAL,CACAO,WADA,CACY,CAAC,OAAKN,MAAN,CADZ,EAC0B,WAD1B,EAEAO,WAFA,CAEY,OAAKP,MAFjB,EAGAiB,UAHA,EAAb;;AAMA,oBAAIC,cAAc,EAAlB;AACAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB,CADoB,CACW;;AAE/B,wBAAID,KAAJ,EAAW;AACP,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,8BAAMS,QAAN,GAHO,CAGY;AACtB,qBAJD,MAIO;AACHlB,gCAAQC,GAAR,CAAY,kCAAZ;AACAR,gCAAQe,WAAR;AACH;AAEJ,iBAZD;;AAcAF,uBAAOJ,OAAP,GAAiB,aAAK;AAClBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,kCAAP;AACH,iBAHD;AAIH,aA3BM,CAAP;AA4BH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnC,oBAAIC,UAAU,OAAKN,WAAL,CACDO,WADC,CACW,CAAC,OAAKN,MAAN,CADX,EACyB,WADzB,EAEDO,WAFC,CAEW,OAAKP,MAFhB,EAGD6B,KAHC,EAAd;;AAKAxB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,kCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQO,OAAR,GAAkB,aAAK;AACnBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,kCAAP;AACH,iBAHD;AAIH,aAZM,CAAP;AAaH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve,reject) => {\r\n\r\n            let request = this._connection\r\n                         .transaction([this._store],'readwrite')\r\n                         .objectStore(this._store)\r\n                         .add(negociacao);\r\n            \r\n            request.onsuccess = e => {\r\n                console.log('Negociacao incluída com sucesso');\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Erro na inclusão da negociação')\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise ((resolve,reject) => {\r\n\r\n            let cursor = this._connection\r\n                        .transaction([this._store],'readwrite')\r\n                        .objectStore(this._store)\r\n                        .openCursor();\r\n\r\n\r\n            let negociacoes = [];\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;   // ponteiro\r\n\r\n                if (atual) {\r\n                    let dado = atual.value;   \r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();  // lê o proximo \r\n                } else {\r\n                    console.log('Negociacões listadas com sucesso');\r\n                    resolve(negociacoes);\r\n                }\r\n\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Erro na listagem das negociações')\r\n            };\r\n        })\r\n    }  \r\n    \r\n    apagaTodos() {\r\n        return new Promise((resolve,reject) => {\r\n            let request = this._connection\r\n                        .transaction([this._store],'readwrite')\r\n                        .objectStore(this._store)\r\n                        .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Erro na exclusão das negociações');\r\n            }\r\n        })\r\n    }\r\n}"]}