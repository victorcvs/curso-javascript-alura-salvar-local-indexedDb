{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,uBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AACT,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAEnC,gCAAIC,UAAU,MAAKN,WAAL,CACAO,WADA,CACY,CAAC,MAAKN,MAAN,CADZ,EAC0B,WAD1B,EAEAO,WAFA,CAEY,MAAKP,MAFjB,EAGAQ,GAHA,CAGIP,UAHJ,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBC,wCAAQC,GAAR,CAAY,iCAAZ;AACAR;AACH,6BAHD;;AAKAE,oCAAQO,OAAR,GAAkB,aAAK;AACnBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,gCAAP;AACH,6BAHD;AAKH,yBAjBM,CAAP;AAkBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAa,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACAO,WADA,CACY,CAAC,OAAKN,MAAN,CADZ,EAC0B,WAD1B,EAEAO,WAFA,CAEY,OAAKP,MAFjB,EAGAiB,UAHA,EAAb;;AAMA,gCAAIC,cAAc,EAAlB;AACAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB,CADoB,CACW;;AAE/B,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN,GAHO,CAGY;AACtB,iCAJD,MAIO;AACHjB,4CAAQC,GAAR,CAAY,kCAAZ;AACAR,4CAAQe,WAAR;AACH;AAEJ,6BAZD;;AAcAF,mCAAOJ,OAAP,GAAiB,aAAK;AAClBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,kCAAP;AACH,6BAHD;AAIH,yBA3BM,CAAP;AA4BH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnC,gCAAIC,UAAU,OAAKN,WAAL,CACDO,WADC,CACW,CAAC,OAAKN,MAAN,CADX,EACyB,WADzB,EAEDO,WAFC,CAEW,OAAKP,MAFhB,EAGD4B,KAHC,EAAd;;AAKAvB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,kCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQO,OAAR,GAAkB,aAAK;AACnBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,kCAAP;AACH,6BAHD;AAIH,yBAZM,CAAP;AAaH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from \"../models/Negociacao.js\";\r\n\r\nexport class NegociacaoDao {\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve,reject) => {\r\n\r\n            let request = this._connection\r\n                         .transaction([this._store],'readwrite')\r\n                         .objectStore(this._store)\r\n                         .add(negociacao);\r\n            \r\n            request.onsuccess = e => {\r\n                console.log('Negociacao incluída com sucesso');\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Erro na inclusão da negociação')\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise ((resolve,reject) => {\r\n\r\n            let cursor = this._connection\r\n                        .transaction([this._store],'readwrite')\r\n                        .objectStore(this._store)\r\n                        .openCursor();\r\n\r\n\r\n            let negociacoes = [];\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;   // ponteiro\r\n\r\n                if (atual) {\r\n                    let dado = atual.value;   \r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();  // lê o proximo \r\n                } else {\r\n                    console.log('Negociacões listadas com sucesso');\r\n                    resolve(negociacoes);\r\n                }\r\n\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Erro na listagem das negociações')\r\n            };\r\n        })\r\n    }  \r\n    \r\n    apagaTodos() {\r\n        return new Promise((resolve,reject) => {\r\n            let request = this._connection\r\n                        .transaction([this._store],'readwrite')\r\n                        .objectStore(this._store)\r\n                        .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Erro na exclusão das negociações');\r\n            }\r\n        })\r\n    }\r\n}"]}